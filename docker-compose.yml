# docker-compose.yml
version: '3.8'

services:
  cassandra:
    # ... (cassandra service configuration remains the same)
    image: cassandra:4.1
    container_name: todolist_cassandra
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=TodoListCluster
      - CASSANDRA_DC=dc1
      - CASSANDRA_RACK=rack1
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe keyspaces'"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s

  cassandra-init:
    # ... (cassandra-init service configuration remains the same)
    image: cassandra:4.1
    container_name: todolist_cassandra_init
    depends_on:
      cassandra:
        condition: service_healthy
    volumes:
      - ./cmd/cassandra/init.cql:/scripts/init.cql
    command: >
      /bin/bash -c "
        echo 'Waiting for Cassandra to be fully ready...';
        until cqlsh cassandra 9042 -e 'describe keyspaces' > /dev/null 2>&1; do
          echo 'Cassandra not up yet, sleeping...';
          sleep 5;
        done;
        echo 'Cassandra is up. Initializing schema using /scripts/init.cql...';
        cqlsh cassandra 9042 -f /scripts/init.cql;
        echo 'Schema initialization attempt finished.';
      "
    restart: 'no'

  app:
    build:
      context: .  # The build context is still the project root
      dockerfile: ./deploy/Dockerfile # Path to the Dockerfile relative to the context
    container_name: todolist_app
    ports:
      - "7071:7071"
    depends_on:
      cassandra:
        condition: service_healthy
      cassandra-init:
        condition: service_completed_successfully
    environment:
      CASSANDRA_HOSTS: "cassandra:9042"
      CASSANDRA_KEYSPACE: "todolist"
    restart: unless-stopped

volumes:
  cassandra_data:
    driver: local